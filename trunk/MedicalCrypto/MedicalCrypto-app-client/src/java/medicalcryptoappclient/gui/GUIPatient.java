/*
 * GUIPatient.java
 *
 * Created on 6 sierpie≈Ñ 2008, 15:54
 */
package medicalcryptoappclient.gui;

import beans.statefull.PatientRemote;
import com.sun.appserv.security.ProgrammaticLogin;
import entities.medical.dto.DoctorDTO;
import entities.medical.dto.PersonsDTO;
import entities.medical.dto.TreatmentDTO;
import entities.medical.dto.VisitDTO;
import exceptions.CryptographyException;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import medicalcryptoappclient.gui.validators.CityValidator;
import medicalcryptoappclient.gui.validators.NameValidator;
import medicalcryptoappclient.gui.validators.NumberValidator;
import medicalcryptoappclient.gui.validators.PassValidator;
import medicalcryptoappclient.gui.validators.PeselValidator;
import medicalcryptoappclient.gui.validators.PhoneValidator;
import medicalcryptoappclient.gui.validators.StreetValidator;
import medicalcryptoappclient.gui.validators.SurnameValidator;
import medicalcryptoappclient.gui.validators.ZipValidator;

/**
 *
 * @author  Piotrek
 */
public class GUIPatient extends javax.swing.JFrame {

    /** Creates new form GUIPatient */
    public GUIPatient(PersonsDTO user, PatientRemote bean) {
        try {
            System.out.println("iNICJUJE OKNA");
            initComponents();
            mainPanel.setVisible(true);
            visitPanel.setVisible(false);
            treatmentPanel.setVisible(false);
            editPersonPanel.setVisible(false);
            this.loggedUser = user;
            this.patientBean = bean;
            setLoggedUserName();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private DefaultMutableTreeNode addVisits(DefaultMutableTreeNode parent, List<VisitDTO> visitList) {
        for (int j = 0; j < visitList.size(); j++) {
            VisitDTO visitDTO = visitList.get(j);
            DefaultMutableTreeNode child = new DefaultMutableTreeNode(visitDTO);
            parent.add(child);
        }
        return parent;
    }

    private DefaultMutableTreeNode addTreatment(DefaultMutableTreeNode parent, List<TreatmentDTO> treatmentList) {
        for (int j = 0; j < treatmentList.size(); j++) {
            TreatmentDTO treatmentDTO = treatmentList.get(j);
            DefaultMutableTreeNode child = new DefaultMutableTreeNode(treatmentDTO);
            parent.add(child);
        }
        return parent;
    }

    private void loadUserData(PersonsDTO user) {

        peseljTextField.setText(user.getFlippedPesel());
        passjTextField.setText(user.getPass());
        namejTextField.setText(user.getName());
        surnamejTextField.setText(user.getSurname());
        streetjTextField.setText(user.getStreet());
        numberjTextField.setText(user.getNumber());
        zipjTextField.setText(String.valueOf(user.getZip()));
        cityjTextField.setText(user.getCity());
        phonejTextField.setText(user.getPhone());
        rolejComboBox.setSelectedIndex(0);
    }

    private void setLoggedUserName() {
        this.loggedUserLabel.setText("Zalogowany: " + loggedUser.getName() + " " + loggedUser.getSurname());
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        visitPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        diagnosejTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        infojTextArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        visitjTreeScrollPane = new javax.swing.JScrollPane();
        visitJTree1 = new javax.swing.JTree();
        doctorsjComboBox = new javax.swing.JComboBox();
        treatmentPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        medicinejTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dosagejTextArea = new javax.swing.JTextArea();
        treatmentjTreeScrollPane = new javax.swing.JScrollPane();
        treatmentJTree = new javax.swing.JTree();
        treatmentjComboBox = new javax.swing.JComboBox();
        editPersonPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        peseljTextField = new javax.swing.JTextField();
        passjTextField = new javax.swing.JTextField();
        namejTextField = new javax.swing.JTextField();
        surnamejTextField = new javax.swing.JTextField();
        streetjTextField = new javax.swing.JTextField();
        numberjTextField = new javax.swing.JTextField();
        zipjTextField = new javax.swing.JTextField();
        cityjTextField = new javax.swing.JTextField();
        phonejTextField = new javax.swing.JTextField();
        rolejComboBox = new javax.swing.JComboBox();
        peselErrorjLabel = new javax.swing.JLabel();
        passErrorjLabel = new javax.swing.JLabel();
        nameErrorjLabel = new javax.swing.JLabel();
        surnameErrorjLabel = new javax.swing.JLabel();
        streetErrorjLabel = new javax.swing.JLabel();
        numberErrorjLabel = new javax.swing.JLabel();
        zipErrorjLabel = new javax.swing.JLabel();
        cityErrorjLabel = new javax.swing.JLabel();
        phoneErrorjLabel = new javax.swing.JLabel();
        OKEditDatajButton = new javax.swing.JButton();
        CancelEditDatajButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        loggedUserLabel = new javax.swing.JLabel();
        textLabel = new javax.swing.JLabel();
        mainjMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mainPanelItem = new javax.swing.JMenuItem();
        editDataItem = new javax.swing.JMenuItem();
        endItem = new javax.swing.JMenuItem();
        visitMenu = new javax.swing.JMenu();
        visitItem = new javax.swing.JMenuItem();
        treatmentMenu = new javax.swing.JMenu();
        treatmentAllItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Przychodnia");

        visitPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Wizyty:"));

        jLabel4.setText("Diagnoza:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Informacje:");

        diagnosejTextField.setEditable(false);

        infojTextArea.setBackground(new java.awt.Color(240, 240, 240));
        infojTextArea.setColumns(20);
        infojTextArea.setEditable(false);
        infojTextArea.setLineWrap(true);
        infojTextArea.setRows(5);
        jScrollPane2.setViewportView(infojTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(diagnosejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagnosejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        jLabel7.setText("Wybierz lekarza:");

        visitJTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                visitJTree1ValueChanged(evt);
            }
        });
        visitjTreeScrollPane.setViewportView(visitJTree1);

        doctorsjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wszyscy" }));
        doctorsjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorsjComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout visitPanelLayout = new javax.swing.GroupLayout(visitPanel);
        visitPanel.setLayout(visitPanelLayout);
        visitPanelLayout.setHorizontalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctorsjComboBox, 0, 304, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(visitjTreeScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
        );
        visitPanelLayout.setVerticalGroup(
            visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitPanelLayout.createSequentialGroup()
                .addGroup(visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorsjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visitjTreeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        treatmentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Leczenie:"));

        jLabel1.setText("Wybierz wizytƒô:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Lek:");

        jLabel3.setText("Dawkowanie:");

        medicinejTextField.setEditable(false);

        dosagejTextArea.setBackground(new java.awt.Color(240, 240, 240));
        dosagejTextArea.setColumns(20);
        dosagejTextArea.setEditable(false);
        dosagejTextArea.setRows(5);
        jScrollPane1.setViewportView(dosagejTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addComponent(medicinejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicinejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        treatmentJTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treatmentJTreeValueChanged(evt);
            }
        });
        treatmentjTreeScrollPane.setViewportView(treatmentJTree);

        treatmentjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wszystkie" }));
        treatmentjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentjComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout treatmentPanelLayout = new javax.swing.GroupLayout(treatmentPanel);
        treatmentPanel.setLayout(treatmentPanelLayout);
        treatmentPanelLayout.setHorizontalGroup(
            treatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treatmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(treatmentjComboBox, 0, 307, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(treatmentjTreeScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
        );
        treatmentPanelLayout.setVerticalGroup(
            treatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treatmentPanelLayout.createSequentialGroup()
                .addGroup(treatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(treatmentjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(treatmentjTreeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        editPersonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edycja danych:"));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("PESEL:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Has≈Ço:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Imie:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Nazwisko:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Ulica:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Numer:");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Kod:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Miasto:");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Telefon:");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("U≈ºytkownik:");

        peseljTextField.setEditable(false);
        peseljTextField.setInputVerifier(new PeselValidator(nameErrorjLabel));

        passjTextField.setInputVerifier(new PassValidator(passErrorjLabel));

        namejTextField.setInputVerifier(new NameValidator(nameErrorjLabel));

        surnamejTextField.setInputVerifier(new SurnameValidator(surnameErrorjLabel));

        streetjTextField.setInputVerifier(new StreetValidator(streetErrorjLabel));

        numberjTextField.setInputVerifier(new NumberValidator(numberErrorjLabel));

        zipjTextField.setInputVerifier(new ZipValidator(zipErrorjLabel));

        cityjTextField.setInputVerifier(new CityValidator(cityErrorjLabel));

        phonejTextField.setInputVerifier(new PhoneValidator(phoneErrorjLabel));

        rolejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pacjent", "Doktor", "Pielƒôgniarka", "Administrator" }));
        rolejComboBox.setEnabled(false);

        peselErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        peselErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        peselErrorjLabel.setText("B≈ÇƒÖd. Wprowad≈∫ 11 cyfr");
        peselErrorjLabel.setInputVerifier(new PeselValidator(peselErrorjLabel));

        passErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        passErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        passErrorjLabel.setText("B≈ÇƒÖd. Minimum 5 znak√≥w");

        nameErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        nameErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        nameErrorjLabel.setText("B≈ÇƒÖd (Jan, Anna Maria, itp.)");

        surnameErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        surnameErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        surnameErrorjLabel.setText("B≈ÇƒÖd (Gula, Nowak-Kos, itp.)");

        streetErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        streetErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        streetErrorjLabel.setText("B≈ÇƒÖd (Inna, Inna-Du≈ºa, itp.)");

        numberErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        numberErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        numberErrorjLabel.setText("B≈ÇƒÖd (1, 2/3 336/54, itp.)");

        zipErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        zipErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        zipErrorjLabel.setText("B≈ÇƒÖd (00192, 94212, itp.)");

        cityErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        cityErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        cityErrorjLabel.setText("B≈ÇƒÖd (≈Å√≥d≈∫, Bielsko-Bia≈Ça, itp.)");

        phoneErrorjLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        phoneErrorjLabel.setForeground(new java.awt.Color(255, 0, 0));
        phoneErrorjLabel.setText("B≈ÇƒÖd (42675498, 510112345 itp.)");

        OKEditDatajButton.setText("OK");
        OKEditDatajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKEditDatajButtonActionPerformed(evt);
            }
        });

        CancelEditDatajButton.setText("Anuluj");
        CancelEditDatajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelEditDatajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editPersonPanelLayout = new javax.swing.GroupLayout(editPersonPanel);
        editPersonPanel.setLayout(editPersonPanelLayout);
        editPersonPanelLayout.setHorizontalGroup(
            editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPersonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(editPersonPanelLayout.createSequentialGroup()
                        .addComponent(CancelEditDatajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OKEditDatajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(surnamejTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(namejTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(peseljTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streetjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numberjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zipjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phonejTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(peselErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(nameErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(streetErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(numberErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(zipErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(cityErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(phoneErrorjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(surnameErrorjLabel))
                .addContainerGap())
        );
        editPersonPanelLayout.setVerticalGroup(
            editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPersonPanelLayout.createSequentialGroup()
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peseljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peselErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phonejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneErrorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OKEditDatajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelEditDatajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.setBackground(new java.awt.Color(45, 0, 111));

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medicalcryptoappclient/gui/nfz.jpg"))); // NOI18N

        loggedUserLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        loggedUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        loggedUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        loggedUserLabel.setText("Zalogowany:");

        textLabel.setFont(new java.awt.Font("Tahoma", 1, 24));
        textLabel.setForeground(new java.awt.Color(255, 255, 255));
        textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textLabel.setText("Witamy w przychodni lekarskiej");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loggedUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(loggedUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageLabel)
                .addGap(18, 18, 18)
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        fileMenu.setText("Plik");

        mainPanelItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mainPanelItem.setText("Panel g≈Ç√≥wny");
        mainPanelItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPanelItemActionPerformed(evt);
            }
        });
        fileMenu.add(mainPanelItem);

        editDataItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        editDataItem.setText("Edytuj swoje dane");
        editDataItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDataItemActionPerformed(evt);
            }
        });
        fileMenu.add(editDataItem);

        endItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        endItem.setText("Koniec");
        endItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endItemActionPerformed(evt);
            }
        });
        fileMenu.add(endItem);

        mainjMenuBar.add(fileMenu);

        visitMenu.setText("Wizyty");

        visitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK));
        visitItem.setText("PrzeglƒÖdaj wizyty");
        visitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitItemActionPerformed(evt);
            }
        });
        visitMenu.add(visitItem);

        mainjMenuBar.add(visitMenu);

        treatmentMenu.setText("Leczenie");

        treatmentAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        treatmentAllItem.setText("PrzeglƒÖdaj leczenie");
        treatmentAllItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentAllItemActionPerformed(evt);
            }
        });
        treatmentMenu.add(treatmentAllItem);

        mainjMenuBar.add(treatmentMenu);

        setJMenuBar(mainjMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(treatmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(visitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(editPersonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(treatmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(visitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(editPersonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void visitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitItemActionPerformed
    try {
        if (doctorsList == null) {
            doctorsList = patientBean.findDoctors();
            Collections.sort(doctorsList);
        }
        if (doctorsjComboBox.getItemCount() == 1) {
            for (int i = 0; i < doctorsList.size(); i++) {
                DoctorDTO doctorDTO = doctorsList.get(i);
                doctorsjComboBox.addItem(doctorDTO);
            }
        }
        doctorsjComboBox.setSelectedIndex(0);
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(loggedUser);
        for (int i = 0; i < doctorsList.size(); i++) {
            DoctorDTO doctorDTO = doctorsList.get(i);
            List<VisitDTO> visitList = patientBean.findVisitByDoctorPatient(doctorDTO.getIdPersons());
            if (visitList.isEmpty()) {
                continue;
            }
            DefaultMutableTreeNode parent = new DefaultMutableTreeNode(doctorDTO);
            root.add(addVisits(parent, visitList));
        }
        DefaultTreeModel model = (DefaultTreeModel) visitJTree1.getModel();
        model.setRoot(root);
        mainPanel.setVisible(false);
        treatmentPanel.setVisible(false);
        visitPanel.setVisible(true);
    } catch (CryptographyException ex) {
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy pobieraniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy przetwarzaniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    }

}//GEN-LAST:event_visitItemActionPerformed

private void treatmentJTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treatmentJTreeValueChanged
    TreePath selectedPath = evt.getPath();
    DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
    String medicine = "";
    String dosage = "";
    if (selectedNode.getUserObject() instanceof TreatmentDTO) {
        TreatmentDTO treatmentDTO = (TreatmentDTO) selectedNode.getUserObject();
        medicine = treatmentDTO.getMedicine();
        dosage = treatmentDTO.getDosage();
    }
    medicinejTextField.setText(medicine);
    dosagejTextArea.setText(dosage);
}//GEN-LAST:event_treatmentJTreeValueChanged

private void treatmentAllItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentAllItemActionPerformed
    try {
        List<VisitDTO> visitList = patientBean.findVisit();//GEN-LAST:event_treatmentAllItemActionPerformed
            Collections.sort(visitList);
            DefaultMutableTreeNode root = new DefaultMutableTreeNode(loggedUser);
            boolean addItems = false;
            if (treatmentjComboBox.getItemCount() == 1) {
                addItems = true;
            }
            for (int i = 0; i < visitList.size(); i++) {
                VisitDTO visitDTO = visitList.get(i);
                if (addItems) {
                    treatmentjComboBox.addItem(visitDTO);
                }
                List<TreatmentDTO> treatmentList = patientBean.findTreatmentByVisit(visitDTO.getIdVisit());
                if (treatmentList.isEmpty()) {
                    continue;
                }
                DefaultMutableTreeNode parent = new DefaultMutableTreeNode(visitDTO);
                root.add(addTreatment(parent, treatmentList));
            }
            treatmentjComboBox.setSelectedIndex(0);
            DefaultTreeModel model = (DefaultTreeModel) treatmentJTree.getModel();
            model.setRoot(root);
            //treatmentjTreeScrollPane.setViewportView(treatmentJTree);
            mainPanel.setVisible(false);
            visitPanel.setVisible(false);
            treatmentPanel.setVisible(true);
        } catch (CryptographyException ex) {
            JOptionPane.showMessageDialog(this,
                    "WystƒÖpi≈Ç b≈ÇƒÖd przy pobieraniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                    "B≈ÇƒÖd",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "WystƒÖpi≈Ç b≈ÇƒÖd przy przetwarzaniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                    "B≈ÇƒÖd",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

private void doctorsjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorsjComboBoxActionPerformed
    try {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(loggedUser);
        Object selectedItem = doctorsjComboBox.getSelectedItem();
        if (selectedItem instanceof DoctorDTO) {
            DoctorDTO selectedDoctorDTO = (DoctorDTO) selectedItem;
            List<VisitDTO> visitList = patientBean.findVisitByDoctorPatient(selectedDoctorDTO.getIdPersons());
            if (!visitList.isEmpty()) {
                DefaultMutableTreeNode parent = new DefaultMutableTreeNode(selectedDoctorDTO);
                root.add(addVisits(parent, visitList));
                DefaultTreeModel model= (DefaultTreeModel) visitJTree1.getModel();
                model.setRoot(root);
                mainPanel.setVisible(false);
                treatmentPanel.setVisible(false);
                visitPanel.setVisible(true);
            }
        } else {
            visitItemActionPerformed(evt);
        }
    } catch (CryptographyException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy pobieraniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy przetwarzaniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_doctorsjComboBoxActionPerformed

private void treatmentjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentjComboBoxActionPerformed
    try {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(loggedUser);
        Object selectedItem = treatmentjComboBox.getSelectedItem();
        if (selectedItem instanceof VisitDTO) {
            VisitDTO selectedVisitDTO = (VisitDTO) selectedItem;
            List<TreatmentDTO> treatmentList = patientBean.findTreatmentByVisit(selectedVisitDTO.getIdVisit());
            if (!treatmentList.isEmpty()) {
                DefaultMutableTreeNode parent = new DefaultMutableTreeNode(selectedVisitDTO);
                root.add(addTreatment(parent, treatmentList));
                DefaultTreeModel model= (DefaultTreeModel) treatmentJTree.getModel();
                model.setRoot(root);
                mainPanel.setVisible(false);
                treatmentPanel.setVisible(false);
                visitPanel.setVisible(true);
            }
        } else {
            treatmentAllItemActionPerformed(evt);
        }
    } catch (CryptographyException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy pobieraniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy przetwarzaniu danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_treatmentjComboBoxActionPerformed

private void visitJTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_visitJTree1ValueChanged
    TreePath selectedPath = evt.getPath();
    DefaultMutableTreeNode selectedNode= (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
    String diagnose = "";
    String info = "";
    if (selectedNode.getUserObject() instanceof VisitDTO) {
        VisitDTO visitDTO = (VisitDTO) selectedNode.getUserObject();
        diagnose = visitDTO.getDiagnose();
        info = visitDTO.getInfo();
    }
    diagnosejTextField.setText(diagnose);
    infojTextArea.setText(info);
}//GEN-LAST:event_visitJTree1ValueChanged

private void OKEditDatajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKEditDatajButtonActionPerformed
    mainPanel.setVisible(false);
    visitPanel.setVisible(false);
    treatmentPanel.setVisible(false);
    editPersonPanel.setVisible(true);
    loggedUser.setPass(passjTextField.getText());
    loggedUser.setName(namejTextField.getText());
    loggedUser.setSurname(surnamejTextField.getText());
    loggedUser.setStreet(streetjTextField.getText());
    loggedUser.setNumber(numberjTextField.getText());
    loggedUser.setZip(Integer.parseInt(zipjTextField.getText()));
    loggedUser.setCity(cityjTextField.getText());
    loggedUser.setPhone(phonejTextField.getText());
    try {
        boolean editPatient = patientBean.editPatient(loggedUser);
        if (editPatient) {
            JOptionPane.showMessageDialog(this,
                    "Pomy≈õlnie zmieniono dane u≈ºytkownika.",
                    "Zmiana danych",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this,
                "WystƒÖpi≈Ç b≈ÇƒÖd przy edycji danych\nSkontaktuj siƒô z przychodniƒÖ lekarskƒÖ",
                "B≈ÇƒÖd",
                JOptionPane.ERROR_MESSAGE);
    }


}//GEN-LAST:event_OKEditDatajButtonActionPerformed

private void CancelEditDatajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelEditDatajButtonActionPerformed
    mainPanelItemActionPerformed(evt);
}//GEN-LAST:event_CancelEditDatajButtonActionPerformed

private void editDataItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDataItemActionPerformed
    loadUserData(loggedUser);
    mainPanel.setVisible(false);
    visitPanel.setVisible(false);
    treatmentPanel.setVisible(false);
    editPersonPanel.setVisible(true);
}//GEN-LAST:event_editDataItemActionPerformed

private void endItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endItemActionPerformed
    try {
        System.out.println(new ProgrammaticLogin().logout(true));
    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        //System.exit(0);
    }

}//GEN-LAST:event_endItemActionPerformed

private void mainPanelItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPanelItemActionPerformed
    setLoggedUserName();
    mainPanel.setVisible(true);
    visitPanel.setVisible(false);
    treatmentPanel.setVisible(false);
    editPersonPanel.setVisible(false);
}//GEN-LAST:event_mainPanelItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelEditDatajButton;
    private javax.swing.JButton OKEditDatajButton;
    private javax.swing.JLabel cityErrorjLabel;
    private javax.swing.JTextField cityjTextField;
    private javax.swing.JTextField diagnosejTextField;
    private javax.swing.JComboBox doctorsjComboBox;
    private javax.swing.JTextArea dosagejTextArea;
    private javax.swing.JMenuItem editDataItem;
    private javax.swing.JPanel editPersonPanel;
    private javax.swing.JMenuItem endItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextArea infojTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel loggedUserLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem mainPanelItem;
    private javax.swing.JMenuBar mainjMenuBar;
    private javax.swing.JTextField medicinejTextField;
    private javax.swing.JLabel nameErrorjLabel;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JLabel numberErrorjLabel;
    private javax.swing.JTextField numberjTextField;
    private javax.swing.JLabel passErrorjLabel;
    private javax.swing.JTextField passjTextField;
    private javax.swing.JLabel peselErrorjLabel;
    private javax.swing.JTextField peseljTextField;
    private javax.swing.JLabel phoneErrorjLabel;
    private javax.swing.JTextField phonejTextField;
    private javax.swing.JComboBox rolejComboBox;
    private javax.swing.JLabel streetErrorjLabel;
    private javax.swing.JTextField streetjTextField;
    private javax.swing.JLabel surnameErrorjLabel;
    private javax.swing.JTextField surnamejTextField;
    private javax.swing.JLabel textLabel;
    private javax.swing.JMenuItem treatmentAllItem;
    private javax.swing.JTree treatmentJTree;
    private javax.swing.JMenu treatmentMenu;
    private javax.swing.JPanel treatmentPanel;
    private javax.swing.JComboBox treatmentjComboBox;
    private javax.swing.JScrollPane treatmentjTreeScrollPane;
    private javax.swing.JMenuItem visitItem;
    private javax.swing.JTree visitJTree1;
    private javax.swing.JMenu visitMenu;
    private javax.swing.JPanel visitPanel;
    private javax.swing.JScrollPane visitjTreeScrollPane;
    private javax.swing.JLabel zipErrorjLabel;
    private javax.swing.JTextField zipjTextField;
    // End of variables declaration//GEN-END:variables
    PatientRemote patientBean = null;
    PersonsDTO loggedUser = null;
    List<DoctorDTO> doctorsList = null;
}
